---
- name: ensure osp instances are {{ osp_instance_state }}
  os_server:
    cloud: "{{ cloud_name }}"
    state: "{{ osp_instance_state }}"
    name: "{{ item.key }}"
    image: "{{ item.value.image }}"
    key_name: "{{ item.value.key_name }}"
    flavor: "{{ item.value.flavor }}"
    security_groups: "{{ item.value.security_group_name }}"
    wait: yes
    network: int_network
    meta:
      group: "{{ item.value.group }}"
      deployment_name: "{{ item.value.deployment_name }}"
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  register: instance_details
  with_dict: "{{ app_stack }}"

- block:
  - name: Add floating IP
    os_floating_ip:
      cloud: "{{ cloud_name }}"
      state: present
      reuse: yes
      server: "{{ item.key }}"
      network: ext_network
      wait: true
      timeout: 180
    register: instance_floating_ip
    with_dict: "{{ app_stack }}"

  - name: Wait for instance to be available
    wait_for:
      host: "{{ instance_floating_ip.results[0]['floating_ip']['floating_ip_address'] }}"
      port: 22
      search_regex: OpenSSH
      timeout: 600
    delegate_to: "{{ inventory_hostname }}"

  - name: fetch instance info
    os_server_facts:
      cloud: ospcloud
      region_name: RegionOne
    register: instance_info

  - name: Add host
    add_host:
      name: "{{ item.public_v4 }}"
      group: "{{ item.metadata.group }}"
      ansible_private_key_file: ~/.ssh/openstack.pem
      ansible_user: cloud-user
    loop: "{{ instance_info.ansible_facts.openstack_servers }}"

  - name: Add host
    add_host:
      name: "{{ item.public_v4 }}"
      group: "{{ item.metadata.deployment_name }}"
      ansible_private_key_file: ~/.ssh/openstack.pem
      ansible_user: cloud-user
    loop: "{{ instance_info.ansible_facts.openstack_servers }}"
  when: osp_instance_state == 'present'
